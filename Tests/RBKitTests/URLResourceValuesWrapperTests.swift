import Carbon
import CustomDump
import XCTest
@testable import RBKit

final class URLResourceValuesWrapperTests: XCTestCase {
  func test_init() {
    let a = URLResourceValuesWrapper(.init())

    XCTAssertTrue(a.allValues.isEmpty)
    XCTAssertEqual(a.name, nil)
    XCTAssertEqual(a.localizedName, nil)
    XCTAssertEqual(a.isRegularFile, nil)
    XCTAssertEqual(a.isDirectory, nil)
    XCTAssertEqual(a.isSymbolicLink, nil)
    XCTAssertEqual(a.isVolume, nil)
    XCTAssertEqual(a.isPackage, nil)
    XCTAssertEqual(a.isApplication, nil)
    XCTAssertEqual(a.applicationIsScriptable, nil)
    XCTAssertEqual(a.isSystemImmutable, nil)
    XCTAssertEqual(a.isUserImmutable, nil)
    XCTAssertEqual(a.isHidden, nil)
    XCTAssertEqual(a.hasHiddenExtension, nil)
    XCTAssertEqual(a.creationDate, nil)
    XCTAssertEqual(a.contentAccessDate, nil)
    XCTAssertEqual(a.contentModificationDate, nil)
    XCTAssertEqual(a.attributeModificationDate, nil)
    XCTAssertEqual(a.linkCount, nil)
    XCTAssertEqual(a.parentDirectory, nil)
    XCTAssertEqual(a.volume, nil)
    XCTAssertEqual(a.typeIdentifier, nil)
    XCTAssertEqual(a.localizedTypeDescription, nil)
    XCTAssertEqual(a.labelNumber, nil)
    XCTAssertEqual(a.localizedLabel, nil)
    // XCTAssertNil(a.fileResourceIdentifier)
    // XCTAssertNil(a.volumeIdentifier)
    XCTAssertEqual(a.fileIdentifier, nil)
    XCTAssertEqual(a.fileContentIdentifier, nil)
    XCTAssertEqual(a.preferredIOBlockSize, nil)
    XCTAssertEqual(a.isReadable, nil)
    XCTAssertEqual(a.isWritable, nil)
    XCTAssertEqual(a.isExecutable, nil)
    XCTAssertEqual(a.fileSecurity, nil)
    XCTAssertEqual(a.isExcludedFromBackup, nil)
    XCTAssertEqual(a.tagNames, nil)
    XCTAssertEqual(a.path, nil)
    XCTAssertEqual(a.canonicalPath, nil)
    XCTAssertEqual(a.isMountTrigger, nil)
    // XCTAssertNil(a.generationIdentifier)
    XCTAssertEqual(a.documentIdentifier, nil)
    XCTAssertEqual(a.addedToDirectoryDate, nil)
    XCTAssertNil(a.quarantineProperties)
    XCTAssertEqual(a.mayHaveExtendedAttributes, nil)
    XCTAssertEqual(a.isPurgeable, nil)
    XCTAssertEqual(a.isSparse, nil)
    XCTAssertEqual(a.mayShareFileContent, nil)
    XCTAssertEqual(a.fileResourceType, nil)
    XCTAssertEqual(a.directoryEntryCount, nil)
    XCTAssertEqual(a.volumeLocalizedFormatDescription, nil)
    XCTAssertEqual(a.volumeTotalCapacity, nil)
    XCTAssertEqual(a.volumeAvailableCapacity, nil)
    XCTAssertEqual(a.volumeAvailableCapacityForImportantUsage, nil)
    XCTAssertEqual(a.volumeAvailableCapacityForOpportunisticUsage, nil)
    XCTAssertEqual(a.volumeResourceCount, nil)
    XCTAssertEqual(a.volumeSupportsPersistentIDs, nil)
    XCTAssertEqual(a.volumeSupportsSymbolicLinks, nil)
    XCTAssertEqual(a.volumeSupportsHardLinks, nil)
    XCTAssertEqual(a.volumeSupportsJournaling, nil)
    XCTAssertEqual(a.volumeIsJournaling, nil)
    XCTAssertEqual(a.volumeSupportsSparseFiles, nil)
    XCTAssertEqual(a.volumeSupportsZeroRuns, nil)
    XCTAssertEqual(a.volumeSupportsCaseSensitiveNames, nil)
    XCTAssertEqual(a.volumeSupportsCasePreservedNames, nil)
    XCTAssertEqual(a.volumeSupportsRootDirectoryDates, nil)
    XCTAssertEqual(a.volumeSupportsVolumeSizes, nil)
    XCTAssertEqual(a.volumeSupportsRenaming, nil)
    XCTAssertEqual(a.volumeSupportsAdvisoryFileLocking, nil)
    XCTAssertEqual(a.volumeSupportsExtendedSecurity, nil)
    XCTAssertEqual(a.volumeIsBrowsable, nil)
    XCTAssertEqual(a.volumeMaximumFileSize, nil)
    XCTAssertEqual(a.volumeIsEjectable, nil)
    XCTAssertEqual(a.volumeIsRemovable, nil)
    XCTAssertEqual(a.volumeIsInternal, nil)
    XCTAssertEqual(a.volumeIsAutomounted, nil)
    XCTAssertEqual(a.volumeIsLocal, nil)
    XCTAssertEqual(a.volumeIsReadOnly, nil)
    XCTAssertEqual(a.volumeCreationDate, nil)
    XCTAssertEqual(a.volumeURLForRemounting, nil)
    XCTAssertEqual(a.volumeUUIDString, nil)
    XCTAssertEqual(a.volumeName, nil)
    XCTAssertEqual(a.volumeLocalizedName, nil)
    XCTAssertEqual(a.volumeIsEncrypted, nil)
    XCTAssertEqual(a.volumeIsRootFileSystem, nil)
    XCTAssertEqual(a.volumeSupportsCompression, nil)
    XCTAssertEqual(a.volumeSupportsFileCloning, nil)
    XCTAssertEqual(a.volumeSupportsSwapRenaming, nil)
    XCTAssertEqual(a.volumeSupportsExclusiveRenaming, nil)
    XCTAssertEqual(a.volumeSupportsImmutableFiles, nil)
    XCTAssertEqual(a.volumeSupportsAccessPermissions, nil)
    XCTAssertEqual(a.volumeTypeName, nil)
    XCTAssertEqual(a.volumeSubtype, nil)
    XCTAssertEqual(a.volumeMountFromLocation, nil)
    XCTAssertEqual(a.isUbiquitousItem, nil)
    XCTAssertEqual(a.ubiquitousItemHasUnresolvedConflicts, nil)
    XCTAssertEqual(a.ubiquitousItemIsDownloading, nil)
    XCTAssertEqual(a.ubiquitousItemIsUploaded, nil)
    XCTAssertEqual(a.ubiquitousItemIsUploading, nil)
    XCTAssertEqual(a.ubiquitousItemDownloadingStatus, nil)
    XCTAssertEqual(a.ubiquitousItemDownloadingError, nil)
    XCTAssertEqual(a.ubiquitousItemUploadingError, nil)
    XCTAssertEqual(a.ubiquitousItemDownloadRequested, nil)
    XCTAssertEqual(a.ubiquitousItemContainerDisplayName, nil)
    XCTAssertEqual(a.ubiquitousItemIsExcludedFromSync, nil)
    XCTAssertEqual(a.ubiquitousItemIsShared, nil)
    XCTAssertEqual(a.ubiquitousSharedItemCurrentUserRole, nil)
    XCTAssertEqual(a.ubiquitousSharedItemCurrentUserPermissions, nil)
    XCTAssertEqual(a.ubiquitousSharedItemOwnerNameComponents, nil)
    XCTAssertEqual(a.ubiquitousSharedItemMostRecentEditorNameComponents, nil)
    XCTAssertEqual(a.fileProtection, nil)
    XCTAssertEqual(a.fileSize, nil)
    XCTAssertEqual(a.fileAllocatedSize, nil)
    XCTAssertEqual(a.totalFileSize, nil)
    XCTAssertEqual(a.totalFileAllocatedSize, nil)
    XCTAssertEqual(a.isAliasFile, nil)
  }
}
